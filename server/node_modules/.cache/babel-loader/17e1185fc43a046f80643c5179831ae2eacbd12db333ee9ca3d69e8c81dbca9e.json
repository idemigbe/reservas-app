{"ast":null,"code":"// src/api.ts\nimport axios from 'axios';\n\n// Interface que coincide con tu tabla 'reservations'\n\nexport const getBookings = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/api/reservations');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching reservations:', error);\n    return []; // Retorna array vacío en caso de error\n  }\n};","map":{"version":3,"names":["axios","getBookings","response","get","data","error","console"],"sources":["C:/xampp/htdocs/reservas-app/src/api.ts"],"sourcesContent":["// src/api.ts\r\nimport axios from 'axios';\r\n\r\n// Interface que coincide con tu tabla 'reservations'\r\nexport interface Reservation {\r\n  id: number;\r\n  service_type: string;\r\n  date: string; // Asegúrate que esto coincide con el tipo en tu DB\r\n  time: string; // Asegúrate que esto coincide con el tipo en tu DB\r\n  // Agrega otros campos que existan en tu tabla\r\n}\r\n\r\nexport const getBookings = async (): Promise<Reservation[]> => {\r\n  try {\r\n    const response = await axios.get<Reservation[]>('http://localhost:3001/api/reservations');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching reservations:', error);\r\n    return []; // Retorna array vacío en caso de error\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AASA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAoC;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAgB,wCAAwC,CAAC;IACzF,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}